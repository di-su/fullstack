{"ast":null,"code":"var _jsxFileName = \"/Users/disu/Documents/GitHub/fullstack/part1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Unfortunately, the entire application is in the same component. Refactor the code so that it consists of three new components: Header, Content, and Total. All data still resides in the App component, which passes the necessary data to each component using props. Header takes care of rendering the name of the course, Content renders the parts and their number of exercises and Total renders the total number of exercises.\n\nconst Header = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }\n  }, props.course));\n};\n\nconst Content = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, props.part, \" \", props.exercises));\n};\n\nconst Total = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }\n  }, \"Number of exercises \", props.exercises));\n};\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const exercises = '21';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    course: course,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    part: \"Fundamentals of React\",\n    exercises: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    part: \"Using props to pass data\",\n    exercises: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    part: \"State of a component\",\n    exercises: \"14\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Total, {\n    total: exercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/disu/Documents/GitHub/fullstack/part1/src/index.js"],"names":["React","ReactDOM","Header","props","course","Content","part","exercises","Total","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACzB,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KAAK,CAACC,MADR,CADD,CADD;AAQA,CATD;;AAWA,MAAMC,OAAO,GAAIF,KAAD,IAAW;AAC1B,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KAAK,CAACG,IADR,OACeH,KAAK,CAACI,SADrB,CADD,CADD;AAQA,CATD;;AAWA,MAAMC,KAAK,GAAIL,KAAD,IAAW;AACxB,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACsBA,KAAK,CAACI,SAD5B,CADD,CADD;AAQA,CATD;;AAWA,MAAME,GAAG,GAAG,MAAM;AAEjB,QAAML,MAAM,GAAG,oCAAf;AACA,QAAMG,SAAS,GAAG,IAAlB;AAEA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,uBAAd;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,0BAAd;AAAyC,IAAA,SAAS,EAAC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,sBAAd;AAAqC,IAAA,SAAS,EAAC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEG,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD;AASA,CAdD;;AAgBAN,QAAQ,CAACS,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Unfortunately, the entire application is in the same component. Refactor the code so that it consists of three new components: Header, Content, and Total. All data still resides in the App component, which passes the necessary data to each component using props. Header takes care of rendering the name of the course, Content renders the parts and their number of exercises and Total renders the total number of exercises.\n\nconst Header = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<p>\n\t\t\t\t{props.course}\n\t\t\t</p>\n\t\t</div>\n\n\t)\n}\n\nconst Content = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<p>\n\t\t\t\t{props.part} {props.exercises}\n\t\t\t</p>\n\t\t</div>\n\n\t)\n}\n\nconst Total = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tNumber of exercises {props.exercises}\n\t\t\t</p>\n\t\t</div>\n\n\t)\n}\n\nconst App = () => {\n\n\tconst course = 'Half Stack application development'\n\tconst exercises = '21'\n\n\treturn (\n\t\t<div>\n\t\t  <Header course={course} />\n\t\t  <Content part=\"Fundamentals of React\" exercises=\"10\" />\n\t\t  <Content part=\"Using props to pass data\" exercises=\"7\" />\n\t\t  <Content part=\"State of a component\" exercises=\"14\" />\n\t\t  <Total total={exercises} />\n\t\t</div>\n\t)\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}