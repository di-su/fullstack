{"ast":null,"code":"var _jsxFileName = \"/Users/disu/Documents/GitHub/fullstack/part1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // And then place the objects into an array. Modify the variable definitions of App into the following form and modify the other parts of the application accordingly:\n\nconst App = () => {\n  const course = 'Half Stack application development';\n  const parts = [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    name: 'Using props to pass data',\n    exercises: 7\n  }, {\n    name: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, \"Half Stack application development\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, parts[0].name, \", \", parts[0].exercises)));\n}; // const Header = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<h1>\n// \t\t\t\t{props.course}\n// \t\t\t</h1>\n// \t\t</div>\n// \t)\n// }\n// const Part = (props) => {\n// \treturn (\n// \t\t<p>\n// \t\t\t{props.part} {props.exercises}\n// \t\t</p>\n// \t)\n// }\n// const Content = () => {\n// \tconst part1 = \"Fundamentals of React\"\n// \tconst part2 = \"Using props to pass data\"\n// \tconst part3 = \"State of a component\"\n// \tconst exercises1 = 10\n// \tconst exercises2 = 7\n// \tconst exercises3 = 14\n// \treturn (\n// \t\t<div>\n// \t\t\t<Part part={part1} exercises={exercises1} />\n// \t\t\t<Part part={part2} exercises={exercises2} />\n// \t\t\t<Part part={part3} exercises={exercises3} />\n// \t\t</div>\n// \t)\n// }\n// const Total = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>\n// \t\t\t\tNumber of exercises {props.total}\n// \t\t\t</p>\n// \t\t</div>\n// \t)\n// }\n// const App = () => {\n// \tconst course = 'Half Stack application development'\n// \tconst exercises1 = 10\n// \tconst exercises2 = 7\n// \tconst exercises3 = 14\n// \treturn (\n// \t\t<div>\n// \t\t  <Header course={course} />\n// \t\t  <Content />\n// \t\t  <Total total={exercises1 + exercises2 + exercises3} />\n// \t\t</div>\n// \t)\n// }\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/disu/Documents/GitHub/fullstack/part1/src/index.js"],"names":["React","ReactDOM","App","course","parts","name","exercises","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADY,EAKZ;AACED,IAAAA,IAAI,EAAE,0BADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GALY,EASZ;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GATY,CAAd;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADC,eAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAAC,CAAD,CAAL,CAASC,IAAb,QAAqBD,KAAK,CAAC,CAAD,CAAL,CAASE,SAA9B,CADD,CAFC,CADF;AASD,CA1BD,C,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAL,QAAQ,CAACM,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// And then place the objects into an array. Modify the variable definitions of App into the following form and modify the other parts of the application accordingly:\n\nconst App = () => {\n  const course = 'Half Stack application development'\n  const parts = [\n    {\n      name: 'Fundamentals of React',\n      exercises: 10\n    },\n    {\n      name: 'Using props to pass data',\n      exercises: 7\n    },\n    {\n      name: 'State of a component',\n      exercises: 14\n    }\n  ]\n\n  return (\n    <div>\n\t\t\t<h1>Half Stack application development</h1>  \t\t\n\t\t\t<div>\n\t\t\t\t<p>{parts[0].name}, {parts[0].exercises}</p>\n\t\t\t\t\n\t\t\t</div>\n    </div>\n  )\n}\n\n\n// const Header = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<h1>\n// \t\t\t\t{props.course}\n// \t\t\t</h1>\n// \t\t</div>\n\n// \t)\n// }\n\n// const Part = (props) => {\n// \treturn (\n// \t\t<p>\n// \t\t\t{props.part} {props.exercises}\n// \t\t</p>\n\n// \t)\n// }\n\n// const Content = () => {\n\n// \tconst part1 = \"Fundamentals of React\"\n// \tconst part2 = \"Using props to pass data\"\n// \tconst part3 = \"State of a component\"\n// \tconst exercises1 = 10\n// \tconst exercises2 = 7\n// \tconst exercises3 = 14\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<Part part={part1} exercises={exercises1} />\n// \t\t\t<Part part={part2} exercises={exercises2} />\n// \t\t\t<Part part={part3} exercises={exercises3} />\n// \t\t</div>\n\n// \t)\n// }\n\n// const Total = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>\n// \t\t\t\tNumber of exercises {props.total}\n// \t\t\t</p>\n// \t\t</div>\n\n// \t)\n// }\n\n// const App = () => {\n\n// \tconst course = 'Half Stack application development'\n// \tconst exercises1 = 10\n// \tconst exercises2 = 7\n// \tconst exercises3 = 14\n\n// \treturn (\n// \t\t<div>\n// \t\t  <Header course={course} />\n// \t\t  <Content />\n// \t\t  <Total total={exercises1 + exercises2 + exercises3} />\n// \t\t</div>\n// \t)\n// }\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}